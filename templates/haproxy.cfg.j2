global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000


# Enable stats
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST
    # REMEMBER TO UPDATE USER (admin) AND PASSWORD (redhot)  BELOW TO PROTECT YOUR PROXY STATS PAGE
    stats auth admin:redhat

frontend openshift-api-server
    bind *:6443
    default_backend openshift-api-server
    mode tcp
    option tcplog

backend openshift-api-server
    balance source
    mode tcp
{% for node in all_nodes %}
{% if node.role == "control_node" or node.role == "bootstrap_node" %}
    server {{node.name}} {{node.ip}}:6443 check
{% endif %}
{% endfor %}

frontend machine-config-server
    bind *:22623
    default_backend machine-config-server
    mode tcp
    option tcplog

backend machine-config-server
    balance source
    mode tcp
{% for node in all_nodes %}
{% if node.role == "control_node" or node.role == "bootstrap_node" %}
    server {{node.name}} {{ node.ip }}:22623  check
{% endif %}
{% endfor %}

frontend hafrontend-http
    bind *:80
    mode tcp
    default_backend habackend-http
    option tcplog

frontend hafrontend-https
    bind *:443
    default_backend habackend-https
    mode tcp
    option tcplog

backend habackend-http
    mode tcp
    balance roundrobin
{% if worker_replicas > 0 %}
{% for node in all_nodes %}
{% if node.role == "worker_node" %}
    server {{node.name}} {{ node.ip }}:80  check
{% endif %}
{% endfor %}
{% else %}
{% for node in all_nodes %}
{% if node.role == "control_node" %}
    server {{node.name}} {{ node.ip }}:80  check
{% endif %}
{% endfor %}
{% endif %}

backend habackend-https
    balance roundrobin
    mode tcp
{% if worker_replicas > 0 %}
{% for node in all_nodes %}
{% if node.role == "worker_node" %}
    server {{node.name}} {{ node.ip }}:443  check
{% endif %}
{% endfor %}
{% else %}
{% for node in all_nodes %}
{% if node.role == "control_node" %}
    server {{node.name}} {{ node.ip }}:443  check
{% endif %}
{% endfor %}
{% endif %}
